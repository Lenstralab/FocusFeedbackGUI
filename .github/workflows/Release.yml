name: Release

on: [push, pull_request, workflow_call, workflow_dispatch]

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  installer:
    runs-on: windows-latest
    steps:
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pyinstaller, Pyside2 and focusfeedbackgui
        run: pip install pyinstaller pyside2 .
      - name: Run PyInstaller
        run: pyinstaller focusfeedbackgui.spec --clean --noconfirm
      - name: Create installer
        uses: joncloud/makensis-action@v4.1
        with:
          script-file: focusfeedbackgui.nsi

  release:
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist, installer]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: The new tag
        id: computed-tag
        run: |
          set -e
          TAG=$(cat Cargo.toml \
          | grep --extended-regexp "^version =" \
          | grep --extended-regexp --only-matching "[0-9]+\.[0-9]+.[0-9]+[-\.\+a-zA-Z0-9]*" \
          | head --lines=1)
          echo "tag=v$TAG" >> "$GITHUB_OUTPUT"
      - name: Tagging repo using version specified in Cargo.toml
        uses: djordon/git-autotag-action@v0.7.0-beta1
        with:
          tag: ${{ steps.computed-tag.outputs.tag }}
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            FocusFeedbackGUI_setup.exe